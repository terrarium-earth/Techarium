plugins {
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
}

architectury {
	minecraft = rootProject.minecraft_version
}

subprojects {
	apply plugin: "dev.architectury.loom"

	loom {
		silentMojangMappingsLicense()
	}

	dependencies {
		minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
		mappings loom.layered() {
			officialMojangMappings()
			parchment("org.parchmentmc.data:parchment-1.18.2:${parchment_version}@zip")
		}
	}

	jar {
		manifest {
			attributes([
					'Specification-Title'     : mod_name,
					'Specification-Vendor'    : mod_author,
					'Specification-Version'   : project.jar.archiveVersion,
					'Implementation-Title'    : project.name,
					'Implementation-Version'  : project.jar.archiveVersion,
					'Implementation-Vendor'   : mod_author,
					'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
					'Timestampe'              : System.currentTimeMillis(),
					'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
					'Build-On-Minecraft'      : minecraft_version
			])
		}
	}

	// Disables Gradle's custom module metadata from being published to maven. The
	// metadata includes mapped dependencies which are not reasonably consumable by
	// other mod developers.
	tasks.withType(GenerateModuleMetadata) {
		enabled = false
	}
}

allprojects {
	apply plugin: "java"
	apply plugin: "architectury-plugin"
	apply plugin: "maven-publish"

	java.toolchain.languageVersion = JavaLanguageVersion.of(17)
	java.withSourcesJar()

	repositories {
		mavenCentral()
		maven {
			name = 'Sponge / Mixin'
			url = 'https://repo.spongepowered.org/repository/maven-public/'
		}
		maven {
			name = 'BlameJared Maven (CrT / Bookshelf)'
			url = 'https://maven.blamejared.com'
		}
		maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	}

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}
}

